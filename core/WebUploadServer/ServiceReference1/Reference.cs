//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//
//     对此文件的更改可能导致不正确的行为，并在以下条件下丢失:
//     代码重新生成。
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://control.systemregistry.dcmp.sobey.com/", ConfigurationName="ImportServiceTemplate")]
public interface ImportServiceTemplate
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://control.systemregistry.dcmp.sobey.com/importService", ReplyAction="*")]
    System.Threading.Tasks.Task<importServiceResponse> importServiceAsync(importService request);
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
public partial class importService
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Name="importService", Namespace="http://control.systemregistry.dcmp.sobey.com/", Order=0)]
    public importServiceBody Body;
    
    public importService()
    {
    }
    
    public importService(importServiceBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace="")]
public partial class importServiceBody
{
    
    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
    public string source;
    
    public importServiceBody()
    {
    }
    
    public importServiceBody(string source)
    {
        this.source = source;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
public partial class importServiceResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Name="importServiceResponse", Namespace="http://control.systemregistry.dcmp.sobey.com/", Order=0)]
    public importServiceResponseBody Body;
    
    public importServiceResponse()
    {
    }
    
    public importServiceResponse(importServiceResponseBody Body)
    {
        this.Body = Body;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.Runtime.Serialization.DataContractAttribute(Namespace="")]
public partial class importServiceResponseBody
{
    
    [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
    public string @return;
    
    public importServiceResponseBody()
    {
    }
    
    public importServiceResponseBody(string @return)
    {
        this.@return = @return;
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
public interface ImportServiceTemplateChannel : ImportServiceTemplate, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.4")]
public partial class ImportServiceTemplateClient : System.ServiceModel.ClientBase<ImportServiceTemplate>, ImportServiceTemplate
{
    
    /// <summary>
    /// 实现此分部方法，配置服务终结点。
    /// </summary>
    /// <param name="serviceEndpoint">要配置的终结点</param>
    /// <param name="clientCredentials">客户端凭据</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
    
    public ImportServiceTemplateClient() : 
            base(ImportServiceTemplateClient.GetDefaultBinding(), ImportServiceTemplateClient.GetDefaultEndpointAddress())
    {
        this.Endpoint.Name = EndpointConfiguration.ImportServiceTemplatePort.ToString();
        ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
    }
    
    public ImportServiceTemplateClient(EndpointConfiguration endpointConfiguration) : 
            base(ImportServiceTemplateClient.GetBindingForEndpoint(endpointConfiguration), ImportServiceTemplateClient.GetEndpointAddress(endpointConfiguration))
    {
        this.Endpoint.Name = endpointConfiguration.ToString();
        ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
    }
    
    public ImportServiceTemplateClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
            base(ImportServiceTemplateClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
    {
        this.Endpoint.Name = endpointConfiguration.ToString();
        ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
    }
    
    public ImportServiceTemplateClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(ImportServiceTemplateClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
    {
        this.Endpoint.Name = endpointConfiguration.ToString();
        ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
    }
    
    public ImportServiceTemplateClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.Threading.Tasks.Task<importServiceResponse> ImportServiceTemplate.importServiceAsync(importService request)
    {
        return base.Channel.importServiceAsync(request);
    }
    
    public System.Threading.Tasks.Task<importServiceResponse> importServiceAsync(string source)
    {
        importService inValue = new importService();
        inValue.Body = new importServiceBody();
        inValue.Body.source = source;
        return ((ImportServiceTemplate)(this)).importServiceAsync(inValue);
    }
    
    public virtual System.Threading.Tasks.Task OpenAsync()
    {
        return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
    }
    
    public virtual System.Threading.Tasks.Task CloseAsync()
    {
        return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
    }
    
    private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
    {
        if ((endpointConfiguration == EndpointConfiguration.ImportServiceTemplatePort))
        {
            System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
            result.MaxBufferSize = int.MaxValue;
            result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
            result.MaxReceivedMessageSize = int.MaxValue;
            result.AllowCookies = true;
            return result;
        }
        throw new System.InvalidOperationException(string.Format("找不到名称为“{0}”的终结点。", endpointConfiguration));
    }
    
    private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
    {
        if ((endpointConfiguration == EndpointConfiguration.ImportServiceTemplatePort))
        {
            return new System.ServiceModel.EndpointAddress("http://172.16.160.42:8080/SobeyDCMP/services/XMSImport");
        }
        throw new System.InvalidOperationException(string.Format("找不到名称为“{0}”的终结点。", endpointConfiguration));
    }
    
    private static System.ServiceModel.Channels.Binding GetDefaultBinding()
    {
        return ImportServiceTemplateClient.GetBindingForEndpoint(EndpointConfiguration.ImportServiceTemplatePort);
    }
    
    private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
    {
        return ImportServiceTemplateClient.GetEndpointAddress(EndpointConfiguration.ImportServiceTemplatePort);
    }
    
    public enum EndpointConfiguration
    {
        
        ImportServiceTemplatePort,
    }
}
